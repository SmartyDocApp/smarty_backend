services:
  # MySQL pour le service utilisateur
  mysql:
    image: mysql:8.0
    container_name: smarty-mysql
    environment:
      MYSQL_DATABASE: smarty-users
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: user
      MYSQL_PASSWORD: 54321
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    ports:
      - "3308:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./initdb:/docker-entrypoint-initdb.d
    networks:
      - smarty-network
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p54321",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  # MySQL pour le service document
  mysql-document:
    image: mysql:8.0
    container_name: smarty-mysql-document
    environment:
      MYSQL_DATABASE: smarty-documents
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: user
      MYSQL_PASSWORD: 54321
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    ports:
      - "3309:3306"
    volumes:
      - mysql_document_data:/var/lib/mysql
    networks:
      - smarty-network
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p54321",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  # MongoDB pour le service document
  mongo-document:
    image: mongo:6.0
    container_name: smarty-mongo-document
    environment:
      MONGO_INITDB_DATABASE: smarty-documents
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - "27018:27017"
    volumes:
      - mongo_document_data:/data/db
    networks:
      - smarty-network
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "-u",
          "root",
          "-p",
          "rootpassword",
          "--eval",
          "db.adminCommand('ping')",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Service de d√©couverte Eureka
  eureka-server:
    build: ./eureka-server
    image: smarty/eureka-server:latest
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - smarty-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Service utilisateur
  user-service:
    build: ./user-service
    image: smarty/user-service:latest
    container_name: user-service
    ports:
      - "8100:8100"
    depends_on:
      mysql:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/smarty-users?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
    networks:
      - smarty-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8100/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Service d'authentification
  auth-service:
    build: ./auth-service
    image: smarty/auth-service:latest
    container_name: auth-service
    ports:
      - "9000:9000"
    depends_on:
      mysql:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      user-service:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/smarty-users?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
    networks:
      - smarty-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  #Service APi Gateway
  api-gateway:
    build: ./api-gateway
    image: smarty/api-gateway:latest
    container_name: api-gateway
    ports:
      - "8080:8080"
    depends_on:
      eureka-server:
        condition: service_healthy
      auth-service:
        condition: service_healthy
      user-service:
        condition: service_healthy
    env_file:
      - ./api-gateway/.env
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
    networks:
      - smarty-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  smarty-network:
    driver: bridge

volumes:
  mysql_data:
  mysql_document_data:
  mongo_document_data:
